## -*- Mode: Autotest -*-
##
## File: algebra.at
## Package: gfsm
## Description: autotest test-suite script: basic tests
##

AT_BANNER([algebraic operations])

##--------------------------------------------------------------
## definitions

## gfsm_at_binop(1:opname, 2:opsuffix, 3:keywords, 4:compile_args, 5:op_cmd_and_opts)
m4_define([gfsm_at_unop],
 [
  AT_SETUP([$1][$2])
  AT_KEYWORDS([$3])
  opname="[$1]"
  AT_CHECK([$][progdir/gfsmcompile $4 $[]tdata/$1-in.tfst -F $1-in.gfst])
  AT_CHECK([$][progdir/$5 $1-in.gfst -F $1-got.gfst])
  rm -f $1-want.tfst; ln $][tdata/$1-want.tfst expout
  AT_CHECK([$][progdir/gfsmprint $1-got.gfst],0,expout)
  AT_CLEANUP
 ])

## gfsm_at_binop(1:opname, 2:opsuffix, 3:keywords, 4:compile_args, 5:op_cmd_and_opts)
m4_define([gfsm_at_binop],
 [
  AT_SETUP([$1][$2])
  AT_KEYWORDS([$3])
  opname="[$1]"
  AT_CHECK([$][progdir/gfsmcompile $4 $[]tdata/$1-in-1.tfst -F $1-in-1.gfst])
  AT_CHECK([$][progdir/gfsmcompile $4 $[]tdata/$1-in-2.tfst -F $1-in-2.gfst])
  AT_CHECK([$][progdir/$5 $1-in-1.gfst $1-in-2.gfst -F $1-got.gfst])
  rm -f $1-want.tfst; ln $][tdata/$1-want.tfst expout
  AT_CHECK([$][progdir/gfsmprint $1-got.gfst],0,expout)
  AT_CLEANUP
 ])

##--------------------------------------------------------------
## Tests

##-- closure
gfsm_at_unop([closure-plus],[],[algebra closure],[],[gfsmclosure --plus])
gfsm_at_unop([closure-star],[],[algebra closure],[],[gfsmclosure])

#-- complement
gfsm_at_unop([complement],[],[algebra complement],[],[gfsmcomplement])  ##-- using automaton alphabet
gfsm_at_unop([complement-b],[],[algebra complement],[],[gfsmcomplement -i $][tdata/test.lab])  ##-- given alphabet

##-- compose
gfsm_at_binop([compose],[],[algebra compose],[],[gfsmcompose])

##-- concat
gfsm_at_binop([concat],[],[algebra concat],[],[gfsmconcat])

##-- connect
gfsm_at_unop([connect],[],[algebra connect],[],[gfsmconnect])

##-- determinize
gfsm_at_unop([determinize],[],[algebra determinize],[],[gfsmdeterminize])

##-- difference
##  + found bug: clone() wasn't setting root_id (assumed to have been done in copy_shallow())
gfsm_at_binop([difference],[],[algebra difference],[],[gfsmdifference])

##-- intersect
gfsm_at_binop([intersect], [],[algebra intersect],[],[gfsmintersect])
gfsm_at_binop([intersect2],[],[algebra intersect],[],[gfsmintersect])

##-- invert
gfsm_at_unop([invert],[],[algebra invert],[],[gfsminvert])

##-- minimize
gfsm_at_unop([minimize], [],[algebra minimize],[],[gfsmminimize])

##-- optional
gfsm_at_unop([optional],[],[algebra optional],[],[gfsmoptional])

##-- project
gfsm_at_unop([project-lo],[],[algebra project],[],[gfsmproject -1])
gfsm_at_unop([project-hi],[],[algebra project],[],[gfsmproject -2])

##-- renumber
gfsm_at_unop([renumber],[],[algebra renumber],[],[gfsmrenumber])

##-- rmepsilon
gfsm_at_unop([rmepsilon-1],[],[algebra rmepsilon],[],[gfsmrmepsilon -C])
gfsm_at_unop([rmepsilon-2],[],[algebra rmepsilon],[-s real],[gfsmrmepsilon -C]) ##-- example from Hanneforth & de la Higuera, 2010
gfsm_at_unop([rmepsilon-3],[],[algebra rmepsilon],[-s real],[gfsmrmepsilon -C]) ##-- example from Mohri, 2009

##-- union
gfsm_at_binop([union],[],[algebra union],[],[gfsmunion])
